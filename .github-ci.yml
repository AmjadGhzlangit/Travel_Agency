image: lorisleiva/laravel-docker:8.1

# Variables
variables:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_USER: homestead
  MYSQL_PASSWORD: 
  MYSQL_DATABASE: travel_api
  DB_HOST: mysql


cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

.init_ssh: &init_ssh |
  eval $(ssh-agent -s)
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  ssh-keyscan -p $SSH_PORT $SSH_IP >> ~/.ssh/known_hosts
  chmod 644 ~/.ssh/known_hosts
  chmod 666 /dev/tty
  ssh-add <(echo "$SSH_PRIVATE_KEY")

.remove_temp_files: &remove_temp_files |
  rm -rf .scribe
  rm -rf docker
  rm -rf storage/mock
  rm -rf storage/responses
  rm -rf tests
  rm .editorconfig
  rm .env.example
  rm .gitattributes
  rm .gitignore
  rm .gitlab-ci.yml
  rm .phpstorm.meta.php
  rm _ide_helper.php
  rm _ide_helper_models.php
  rm phpunit.xml
  rm README.md
  rm docker-compose.yml
  rm vite.config.js

composer:
  stage: build
  interruptible: true
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate
  artifacts:
    expire_in: 1 month
    paths:
      - vendor/
      - .env
  only:
    - merge_requests
    - main

lint_test:
  stage: test
  interruptible: true
  services:
    - name: mysql:8.0.22
      command: [ "--default-authentication-plugin=mysql_native_password" ]
  dependencies:
    - composer
  script:
    - ./vendor/bin/duster lint
    - echo 'xdebug.mode=develop,debug,coverage' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"
    - echo "SET GLOBAL max_connections = 5000;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "CREATE DATABASE ECARD_DB_test_1;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "CREATE DATABASE ECARD_DB_test_2;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "CREATE DATABASE ECARD_DB_test_3;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "CREATE DATABASE ECARD_DB_test_4;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "CREATE DATABASE ECARD_DB_test_5;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "CREATE DATABASE ECARD_DB_test_6;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "CREATE DATABASE ECARD_DB_test_7;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "CREATE DATABASE ECARD_DB_test_8;" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - echo "GRANT ALL ON *.* TO 'homestead'@'%';" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql
    - php artisan test --parallel --coverage --min=80.0 --processes=3
  artifacts:
    paths:
      - ./storage/responses # for documentation
      - ./storage/logs # for debugging
    expire_in: 1 days
    when: always
  only:
    - merge_requests
    - main


deploy_develop:
  stage: deploy
  dependencies:
    - composer
  environment:
    name: development
    url: https://dev.alebdaa.net/
  only:
    - merge_requests
  resource_group: development
  script:
    - *init_ssh
    - *remove_temp_files
    - php vendor/bin/dep deploy -v

deploy_docs:
  stage: deploy
  dependencies:
    - composer
    - lint_test
  services:
    - name: mysql:8.0.22
      command: [ "--default-authentication-plugin=mysql_native_password" ]
  environment:
    name: documentation
    url: https://docs.alebdaa.net
  only:
    - merge_requests
  resource_group: documentation
  script:
    - *init_ssh
    - php artisan enum:docs
    - php artisan migrate:fresh --seed
    - php artisan scribe:generate --force --verbose -n --env example | tee output.txt
    - if grep -q "encountered some errors while processing routes" output.txt ; then exit 1; fi
    - scp -P $SSH_PORT -v -r -o StrictHostKeyChecking=no docs/* $SSH_DOCS_USER@$SSH_IP:$SSH_DOCS_PUBLIC_DIR

